[tool.poetry]
name = "zigbee2mqtt"
version = "0.0.0"
description = "Python client for Zigbee2MQTT."
authors = ["Franck Nijhof <opensource@frenck.dev>"]
maintainers = ["Franck Nijhof <opensource@frenck.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/frenck/python-zigbee2mqtt"
repository = "https://github.com/frenck/python-zigbee2mqtt"
documentation = "https://github.com/frenck/python-zigbee2mqtt"
keywords = ["zigbee", "zigbee2mqtt", "z2m", "mqtt", "client"]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
    { include = "zigbee2mqtt", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = ">=1.8,<2.0"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/frenck/python-zigbee2mqtt/issues"
Changelog = "https://github.com/frenck/python-zigbee2mqtt/releases"

[tool.poetry.dev-dependencies]
aresponses = "2.1.6"
codespell = "2.2.6"
covdefaults = "2.3.0"
coverage = {version = "7.3.2", extras = ["toml"]}
mypy = "1.7.0"
pre-commit = "3.5.0"
pre-commit-hooks = "4.5.0"
pylint = "3.0.2"
pytest = "7.4.3"
pytest-asyncio = "0.21.1"
pytest-cov = "4.1.0"
ruff = "0.1.5"
safety = "2.4.0b1"
syrupy = "4.6.0"
yamllint = "1.33.0"

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["zigbee2mqtt"]

[tool.coverage.report]
show_missing = true
fail_under = 1

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.11"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.MASTER]
ignore= [
  "tests"
]

[tool.pylint.BASIC]
good-names = [
    "_",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "on",
    "Run",
    "T",
]

[tool.pylint.DESIGN]
max-attributes = 8

[tool.pylint."MESSAGES CONTROL"]
disable= [
    "duplicate-code",
    "format",
    "unsubscriptable-object",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length=88

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff]
select = ["ALL"]
ignore = [
  "ANN101", # Self... explanatory
  "ANN102", # cls... Not classy enough
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful

  # Conflicts with the Ruff formatter
  "COM812",
  "ISC001",
]

[tool.ruff.flake8-pytest-style]
mark-parentheses = false
fixture-parentheses = false

[tool.ruff.isort]
known-first-party = ["zigbee2mqtt"]

[tool.ruff.mccabe]
max-complexity = 25

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
